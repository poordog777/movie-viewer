// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 使用者
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String?
  name      String
  googleId  String?  @unique @map("google_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 關聯
  ratings   Rating[]
  reviews   Review[]
  favorites Favorite[]

  @@map("users")
}

// 電影快取
model Movie {
  id          Int       @id // TMDB movie_id
  title       String
  overview    String?   @db.Text
  posterPath  String?   @map("poster_path")
  releaseDate DateTime? @map("release_date")
  popularity  Float?
  voteAverage Float?    @map("vote_average")
  voteCount   Int?      @map("vote_count")
  cachedAt    DateTime  @default(now()) @map("cached_at")

  // 關聯
  ratings   Rating[]
  reviews   Review[]

  @@map("movies")
  @@index([releaseDate])
  @@index([popularity])
  @@index([voteAverage])
}

// 評分
model Rating {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  movieId   Int      @map("movie_id")
  score     Int      
  createdAt DateTime @default(now()) @map("created_at")

  // 關聯
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  movie     Movie    @relation(fields: [movieId], references: [id])

  @@unique([userId, movieId])
  @@index([movieId, score])
  @@map("ratings")
}

// 評論
model Review {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  movieId   Int      @map("movie_id")
  content   String   @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 關聯
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  movie     Movie    @relation(fields: [movieId], references: [id])

  @@unique([userId, movieId])
  @@index([movieId, createdAt])
  @@map("reviews")
}

// 收藏清單
model Favorite {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  movieId   Int      @map("movie_id")
  createdAt DateTime @default(now()) @map("created_at")

  // 關聯
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, movieId])
  @@map("favorites")
}